# Generated by Django 5.0.7 on 2025-09-25 08:53

from django.db import migrations

def create_groups(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")

    # Create groups if they don't exist
    owner, _ = Group.objects.get_or_create(name="owner")
    manager, _ = Group.objects.get_or_create(name="outlet_manager")
    cashier, _ = Group.objects.get_or_create(name="cashier")

    # OWNER gets all permissions
    owner.permissions.set(Permission.objects.all())

    # MANAGER gets wide bakery-related permissions
    manager_models = [
        "ingredient", "product", "recipe", "recipeitem",
        "batch", "dispatch", "dispatchline",
        "sale", "saleitem", "wastage", "stockledger",
        "outlet", "userprofile",
    ]
    manager_perms = Permission.objects.filter(content_type__model__in=manager_models)
    manager.permissions.set(manager_perms)

    # CASHIER gets view/add/change for sale & saleitem
    cashier_models = ["sale", "saleitem"]
    cashier_perms = Permission.objects.filter(
        content_type__model__in=cashier_models,
        codename__regex=r"^(view|add|change)_",
    )
    cashier.permissions.set(cashier_perms)

def remove_groups(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    Group.objects.filter(name__in=["owner", "outlet_manager", "cashier"]).delete()

class Migration(migrations.Migration):

    dependencies = [
        ("bakery", "0002_userprofile"),
    ]

    operations = [
        migrations.RunPython(create_groups, remove_groups),
    ]
